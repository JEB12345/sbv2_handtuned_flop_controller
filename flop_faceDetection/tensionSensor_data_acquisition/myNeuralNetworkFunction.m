function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 23-Oct-2017 16:30:16.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 24xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [0.721111297607422;0.975589752197266;0.76777458190918;-0.158214569091797;-0.0185585021972656;0.236120223999023;0.411357879638672;0.83226203918457;0.0278043746948242;1.40350341796875;0.0899457931518555;0.34266471862793;0.491499900817871;0.300507545471191;0.600614547729492;0.638465881347656;0.00280380249023438;0.931127965450287;0.491466522216797;-0.0278377532958984;1.27564668655396;0.0763702392578125;0.692672729492188;-0.0849151611328125];
  x1_step1_gain = [2.1089197723296;4.45425427976721;3.49094783100842;2.33546260412491;3.97233018903663;1.22285411072529;0.78515906087256;2.30181816186196;0.903872751526279;2.73951301076393;1.03692357136677;1.93811064081474;4.37777661806302;2.87683064007243;1.75262163833592;1.5532618356343;2.89350147631005;2.20645988478869;1.58347327091513;1.64584487643324;2.50041223408219;0.925584351387614;2.69660794650894;2.09505694305694];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [1.204880751348508694;1.1636593374542718582;0.71209939013334777602;-0.97216127464167734207;-0.14835568539585944348;-0.13636546755095929617;-0.4378917178261445553;-1.1557546443446127249;-1.9424978871660705249;-1.4931305054450081382];
  IW1_1 = [-0.89317079016379508083 0.10670306793158690351 0.10626682373682995453 0.12451340344383750314 0.18725430276438778665 -0.0025114341007855065652 0.22911426760707453987 0.3296718665615445687 -0.10789235638306209075 0.3748855813202024434 -0.53874895928822097435 -0.16197055247411296097 -0.16487327873762666619 -0.251044394935423687 0.082534296478637553252 0.19765553505144700663 0.049845979863860578885 -0.49664141638045239402 0.050429728818584707017 0.20352405229233219708 -0.086953054333073653837 1.3996740667338958275 0.37571668494514520731 0.4941436757802605273;-0.092097424547001802142 0.28954545021042044084 0.51438756962359521996 -0.22751191064457210178 0.46035493348468758956 0.75374726810983516678 0.41831738025555520455 0.1703169118184827413 -0.4396179326232494966 0.61804037223991192818 -0.66844979133115933756 -0.12723307092734495449 -0.14240798619079436671 0.16630099852827362472 -1.0030399355721011379 -0.12053660355612105803 -0.38536693497758678362 -0.32498624135569925686 0.47035360676850856976 -0.060197712746304449238 -0.21098099540175016542 -0.02511534141744743015 -0.42831657252564264704 0.54211523425207264193;0.84862186365884395567 0.68355438508023913524 -0.49572542271934227909 0.31880171346500463248 -0.25879901154824136444 0.082630372319652131696 -0.17009032716872565794 0.092147470313107465723 0.071137185494357546567 -0.040722061646251431211 -0.015280500659174238443 -0.82846434678924274486 0.34581114339115986978 0.19172724807257193747 -0.78705621904468892058 -0.16586147292557681943 0.16946741536517068161 -0.11347027909997246808 -0.60095944622559971382 -0.81655671677770913508 -0.11587820317990193963 0.039007569655288065746 -1.6796359663981745847 0.091468986329611493002;-0.26230183820231017799 -0.35928521529801682455 -0.011574237556094053858 0.41385986499215327017 -0.42563064598147465345 0.31950322970829264646 -0.6265858932029523265 -0.42708652050923473498 0.82820539362784950654 -0.38472204350322503075 -0.21255895718483336365 0.0060611519684571363992 -0.056874745268629296746 0.23733135068143762503 0.58056825037431825098 0.31573639091043054217 0.2292065845905589816 -0.077737758741045659416 0.49803437031560943149 0.39951695693354755123 -0.4103206201680633658 0.37957189629314835866 -0.14379523883816724972 0.16220687479714168688;0.00147568743828025567 0.053617966706718721281 -0.24252024641104819036 -0.12202213731281111309 0.081185024923211002168 -0.58004248245135703321 1.2782915963246179736 0.43429247848651086894 -1.6054337273652712348 0.012942820945827895884 0.078120340508351163167 0.028174390582195452115 0.028161649220501818597 0.26870709968300621195 0.090002728474299992234 -0.047581780057859825173 -0.12660725947599318908 0.080347956622616345523 -0.44281479154498087913 -0.4802764630073574903 0.24421189752263247619 0.40596487175327039543 0.048276575274081481859 -0.37546500215271189083;0.070753662292671853917 0.49060316773120848932 0.23069528709941866662 0.13182486316225053291 0.33135928384506319055 -0.057736858385168898788 0.77130131510925048488 0.082868951097271409401 -0.66508015240347284625 0.97353677834682450509 -1.0338277254204426558 -0.225302116023079535 -0.061535250972833840932 -0.15310870592161685 0.30099733086508539959 -0.99060794440924504478 0.16752468928000976978 -1.0389031651492073305 0.83354416423267940761 -0.064361869382511274762 -0.55245051745297379941 -1.0367073710220162663 -0.71091179644107971303 0.42130550451294807024;-0.41664256501863627946 -0.34980747503671177911 -0.11047465073867622498 -0.55590583679436267328 0.072609248062848491534 -0.25116940711684382359 0.63845709648517656731 0.13637802939995297136 -0.87331776282370288111 0.4102322896629314597 -1.0297187062881687503 -0.34941558125792271383 -0.26272053494000102702 -0.48113198616846492017 1.3740676217200296083 -0.62378957563955261811 1.2295694133601999809 -0.42669951886605678171 1.056334629603802977 0.2525114101498187047 -1.1682564597971714093 1.3805679541386224329 0.11139252367845765834 0.026467518328344777356;-0.061816198393971788505 -0.40777918014665043289 -0.087669731219659638444 0.29186347373381538173 -0.37237857541241875525 0.34431692675268682491 -0.23607832678268039772 -0.10083891017267834767 -0.039396137738919388693 -0.3232610068278965465 -0.13741917234631620404 0.050481537327600758958 -0.045821542440390661266 0.75453491518113180447 0.20143644715573530424 0.23089067428979531682 0.2168998031654053027 0.41855803299264066064 0.36690606368345068944 0.076638490218182170333 -0.5156250027170649064 0.8007417385760137174 -0.26708316986988844821 -0.21739086809011481938;-0.2917772104502898145 -0.16876427407053051777 0.030660244330437305682 -0.093489703252520497956 0.29732701190792332202 -0.64491725282457323942 0.34768390947534488777 0.38861089180882724126 0.19513216611213474172 0.42612414496625111715 -0.24851698185124918017 -0.51909183484033960543 -0.082369865491705135385 0.57636920381858314233 -0.51723087114702204214 -0.37929667892199459001 0.99443174102922249347 0.57633558057923606199 0.12226903750675685578 -0.33843420112699984514 -0.28384163397827816278 -0.1431010701849632083 0.42074273282411200903 -0.71913624719503099758;1.1270256248254089115 -0.65678263498683309152 0.22566304988212151916 -1.1325531545830627156 -0.30318723020572552196 0.50761829823534254658 1.0245985877342824732 -0.84361839678435412981 0.79469304889978498174 -0.75931230290045614861 0.6279961769001612959 -0.56241045574070014368 0.014114631858625249772 0.37986923867450483883 -1.1324616905597044703 0.65266124607887954223 0.78055315526229007705 0.23645643561735718574 0.26233791954098223398 -0.80372332863419959637 0.011843506910192473647 0.56152868780011233607 -0.41014313112142908313 -1.1153779917594195403];
  
  % Layer 2
  b2 = 0.33089987672605136737;
  LW2_1 = [-1.3233360825135385141 1.0187974589592578845 0.38000265993013471189 1.3935679193441166124 0.79810880309058795934 -0.77903706618169044074 0.57472122537639802609 -1.0535279639968972987 0.60916730846063948945 -0.72221266175599851955];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 0.334676190043598;
  y1_step1_xoffset = -6.3978853225708;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
